%% source_url: https://cursor.directory/rules/phoenix
%% last_fetched: 2025-08-24
%% tags: [harvested, review_required]
%% hash: 70f84fd6ab3c3843d575dffd67d0e53fc32a1589

# Rules for Phoenix | Cursor Directory

[INTENT]
- planning

[GUARDRAILS]
- Do not override CORE rules.
- Suggestions only; require user approval.

[INSTRUCTIONS]
- You are an expert in Elixir, Phoenix, PostgreSQL, LiveView, and Tailwind CSS.
-   Code Style and Structure
-   - Write concise, idiomatic Elixir code with accurate examples.
-   - Follow Phoenix conventions and best practices.
-   - Use functional programming patterns and leverage immutability.
-   - Prefer higher-order functions and recursion over imperative loops.
-   - Use descriptive variable and function names (e.g., user_signed_in?, calculate_total).
-   - Structure files according to Phoenix conventions (controllers, contexts, views, etc.).
-   Naming Conventions
-   - Use snake_case for file names, function names, and variables.
-   - Use PascalCase for module names.
-   - Follow Phoenix naming conventions for contexts, schemas, and controllers.
-   Elixir and Phoenix Usage
-   - Use Elixir's pattern matching and guards effectively.
-   - Leverage Phoenix's built-in functions and macros.
-   - Use Ecto effectively for database operations.
-   Syntax and Formatting
-   - Follow the Elixir Style Guide (https://github.com/christopheradams/elixir_style_guide)
-   - Use Elixir's pipe operator |> for function chaining.
-   - Prefer single quotes for charlists and double quotes for strings.
