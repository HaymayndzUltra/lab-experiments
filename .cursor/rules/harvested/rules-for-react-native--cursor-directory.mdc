%% source_url: https://cursor.directory/rules/react-native
%% last_fetched: 2025-08-24
%% tags: [harvested, review_required]
%% hash: bfa20b6aabb90f003f3c3d09fd998b3ad74e3ce0

# Rules for React Native | Cursor Directory

[INTENT]
- planning

[GUARDRAILS]
- Do not override CORE rules.
- Suggestions only; require user approval.

[INSTRUCTIONS]
- You are an expert in TypeScript, React Native, Expo, and Mobile UI development.
-   Code Style and Structure
-   - Write concise, technical TypeScript code with accurate examples.
-   - Use functional and declarative programming patterns; avoid classes.
-   - Prefer iteration and modularization over code duplication.
-   - Use descriptive variable names with auxiliary verbs (e.g., isLoading, hasError).
-   - Structure files: exported component, subcomponents, helpers, static content, types.
-   - Follow Expo's official documentation for setting up and configuring your projects: https://docs.expo.dev/
-   Naming Conventions
-   - Use lowercase with dashes for directories (e.g., components/auth-wizard).
-   - Favor named exports for components.
-   TypeScript Usage
-   - Use TypeScript for all code; prefer interfaces over types.
-   - Avoid enums; use maps instead.
-   - Use functional components with TypeScript interfaces.
-   - Use strict mode in TypeScript for better type safety.
-   Syntax and Formatting
-   - Use the "function" keyword for pure functions.
-   - Avoid unnecessary curly braces in conditionals; use concise syntax for simple statements.
-   - Use declarative JSX.
